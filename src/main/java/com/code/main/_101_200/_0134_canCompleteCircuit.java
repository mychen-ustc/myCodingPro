/**
 * // 134. 加油站
 * // 难度：中等
 * // 在一条环路上有 N 个加油站，其中第 i 个加油站有汽油 gas[i] 升。
 * //
 * // 你有一辆油箱容量无限的的汽车，从第 i 个加油站开往第 i+1 个加油站需要消耗汽油 cost[i] 升。你从其中的一个加油站出发，开始时油箱为空。
 * //
 * // 如果你可以绕环路行驶一周，则返回出发时加油站的编号，否则返回 -1。
 * //
 * // 说明: 
 * // 如果题目有解，该答案即为唯一答案。
 * // 输入数组均为非空数组，且长度相同。
 * // 输入数组中的元素均为非负数。
 * //
 * // 示例 1:
 * // 输入:
 * // gas  = [1,2,3,4,5]
 * // cost = [3,4,5,1,2]
 * // 输出: 3
 * //
 * // 解释:
 * // 从 3 号加油站(索引为 3 处)出发，可获得 4 升汽油。此时油箱有 = 0 + 4 = 4 升汽油
 * // 开往 4 号加油站，此时油箱有 4 - 1 + 5 = 8 升汽油
 * // 开往 0 号加油站，此时油箱有 8 - 2 + 1 = 7 升汽油
 * // 开往 1 号加油站，此时油箱有 7 - 3 + 2 = 6 升汽油
 * // 开往 2 号加油站，此时油箱有 6 - 4 + 3 = 5 升汽油
 * // 开往 3 号加油站，你需要消耗 5 升汽油，正好足够你返回到 3 号加油站。
 * // 因此，3 可为起始索引。
 * //
 * // 示例 2:
 * // 输入:
 * // gas  = [2,3,4]
 * // cost = [3,4,3]
 * // 输出: -1
 * //
 * // 解释:
 * // 你不能从 0 号或 1 号加油站出发，因为没有足够的汽油可以让你行驶到下一个加油站。
 * // 我们从 2 号加油站出发，可以获得 4 升汽油。 此时油箱有 = 0 + 4 = 4 升汽油
 * // 开往 0 号加油站，此时油箱有 4 - 3 + 2 = 3 升汽油
 * // 开往 1 号加油站，此时油箱有 3 - 3 + 3 = 3 升汽油
 * // 你无法返回 2 号加油站，因为返程需要消耗 4 升汽油，但是你的油箱只有 3 升汽油。
 * // 因此，无论怎样，你都不可能绕环路行驶一周。
 */

package com.code.main._101_200;

class Solution_0134 {
    public int canCompleteCircuit(int[] gas, int[] cost) {
        // 分析：假设从x出发最后能达到的站是y,即到不了y的下一站。那么从x~y中间任意一站出发，也不能达到y的下一站（反证）
        // 思路：从第0站出发，检查能否环绕一周，如果不能，就忽略可达到的站，从第一个无法达到的站开始继续检查。
        // 时间复杂度 O(N), 空间复杂度 O(1)
        int len = gas.length;
        for (int start = 0; start < len; ) {    // 遍历起始站，最后达到的站，累计能到达的站
            int totalGas = 0;
            int totalCost = 0;
            int i = start;
            int cnt = 0;
            while (totalGas >= totalCost && cnt < len) {     // 找到第一个不能达到的站
                totalGas += gas[i];
                totalCost += cost[i];
                i = (i + 1) % len;
                if (totalCost <= totalGas) cnt++;
            }
            if (cnt == len) return start;   // 找到满足条件的起始站
            if (i <= start) return -1;  // 已经遍历一圈，没有满足条件的起始站
            start = i;
        }
        return -1;
    }
}

public class _0134_canCompleteCircuit {
    public static void main(String[] args) {
        // [1,2,3,4,5] [3,4,5,1,2]
        int[] gas = {1, 2, 3, 4, 5, 3};
        int[] cost = {3, 4, 5, 1, 2, 5};
        Solution_0134 solution = new Solution_0134();
        int ans = solution.canCompleteCircuit(gas, cost);
        System.out.println(ans);
    }
}
