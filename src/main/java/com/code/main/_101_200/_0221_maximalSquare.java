/**
 * // 221. 最大正方形
 * // 难度：中等
 * // 在一个由 '0' 和 '1' 组成的二维矩阵内，找到只包含 '1' 的最大正方形，并返回其面积。
 * //
 * // 示例 1：
 * // 输入：matrix = [["1","0","1","0","0"],["1","0","1","1","1"],["1","1","1","1","1"],["1","0","0","1","0"]]
 * // 输出：4
 * //
 * // 示例 2：
 * // 输入：matrix = [["0","1"],["1","0"]]
 * // 输出：1
 * //
 * // 示例 3：
 * // 输入：matrix = [["0"]]
 * // 输出：0
 * //
 * // 提示：
 * // m == matrix.length
 * // n == matrix[i].length
 * // 1 <= m, n <= 300
 * // matrix[i][j] 为 '0' 或 '1'
 */

package com.code.main._101_200;

class Solution_0221 {
    public int maximalSquare(char[][] matrix) {
        return 0;
    }
}

public class _0221_maximalSquare {
    public static void main(String[] args) {
//        [["1","0","1","0","0"],["1","0","1","1","1"],["1","1","1","1","1"],["1","0","0","1","0"]]
    }
}
